// ***********************************************************************
// Assembly         : PureActive.Network.Abstractions
// Author           : SteveBu
// Created          : 11-02-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="INetworkGateway.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Net;
using System.Net.NetworkInformation;
using PureActive.Network.Abstractions.NetworkDevice;
using PureActive.Network.Abstractions.Types;

namespace PureActive.Network.Abstractions.Network
{
    /// <summary>
    /// Interface INetworkGateway
    /// Implements the <see cref="PureActive.Network.Abstractions.NetworkDevice.INetworkDevice" />
    /// </summary>
    /// <seealso cref="PureActive.Network.Abstractions.NetworkDevice.INetworkDevice" />
    /// <autogeneratedoc />
    public interface INetworkGateway : INetworkDevice
    {
        /// <summary>
        /// Gets or sets the ip address subnet.
        /// </summary>
        /// <value>The ip address subnet.</value>
        /// <autogeneratedoc />
        IPAddressSubnet IPAddressSubnet { get; set; }

        /// <summary>
        /// Gets the ip address.
        /// </summary>
        /// <value>The ip address.</value>
        /// <autogeneratedoc />
        IPAddress IPAddress { get; }
        /// <summary>
        /// Gets the subnet mask.
        /// </summary>
        /// <value>The subnet mask.</value>
        /// <autogeneratedoc />
        IPAddress SubnetMask { get; }
        /// <summary>
        /// Gets the physical address.
        /// </summary>
        /// <value>The physical address.</value>
        /// <autogeneratedoc />
        PhysicalAddress PhysicalAddress { get; }
    }
}