// ***********************************************************************
// Assembly         : PureActive.Core
// Author           : SteveBu
// Created          : 11-15-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="EnumExtensions.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.ComponentModel;

namespace PureActive.Core.Extensions
{
    /// <summary>
    /// Class EnumExtensions.
    /// </summary>
    /// <autogeneratedoc />
    public static class EnumExtensions
    {
        /// <summary>
        /// Gets the description.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        public static string GetDescription(this Enum value)
        {
            var field = value.GetType().GetField(value.ToString());

            return !(Attribute.GetCustomAttribute(field, typeof(DescriptionAttribute)) is DescriptionAttribute attribute
                )
                ? value.ToString()
                : attribute.Description;
        }

        /// <summary>
        /// Converts to enumstring.
        /// </summary>
        /// <param name="enumStr">The enum string.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        public static string ToEnumString(this string enumStr)
        {
            return string.IsNullOrWhiteSpace(enumStr) ? null : enumStr.Trim().Replace(" ", "_");
        }

        /// <summary>
        /// Froms the enum value.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        public static string FromEnumValue(this Enum value)
        {
            return value.ToString().Replace("_", " ");
        }
    }
}