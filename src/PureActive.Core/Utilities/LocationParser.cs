// ***********************************************************************
// Assembly         : PureActive.Core
// Author           : SteveBu
// Created          : 11-01-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="LocationParser.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using PureActive.Core.Extensions;

namespace PureActive.Core.Utilities
{
    /// <summary>
    /// Class LocationParser.
    /// </summary>
    /// <autogeneratedoc />
    public class LocationParser
    {
        /// <summary>
        /// The location
        /// </summary>
        /// <autogeneratedoc />
        private string _location;

        /// <summary>
        /// Initializes a new instance of the <see cref="LocationParser"/> class.
        /// </summary>
        /// <param name="location">The location.</param>
        /// <autogeneratedoc />
        public LocationParser(string location)
        {
            Location = location;
        }

        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        /// <value>The location.</value>
        /// <autogeneratedoc />
        public string Location
        {
            get => _location;
            set
            {
                _location = value?.Trim().Replace(",,", ",");

                if (string.IsNullOrEmpty(_location))
                {
                    City = null;
                    State = null;
                }
                else
                {
                    var cityStateParsed = _location.SplitOnFirstDelim(',');

                    City = cityStateParsed[0];
                    State = cityStateParsed[1];
                }
            }
        }

        /// <summary>
        /// Gets the city.
        /// </summary>
        /// <value>The city.</value>
        /// <autogeneratedoc />
        public string City { get; private set; }

        /// <summary>
        /// Gets the state.
        /// </summary>
        /// <value>The state.</value>
        /// <autogeneratedoc />
        public string State { get; private set; }
    }
}