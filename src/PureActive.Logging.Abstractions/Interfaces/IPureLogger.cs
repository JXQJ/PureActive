// ***********************************************************************
// Assembly         : PureActive.Logging.Abstractions
// Author           : SteveBu
// Created          : 10-20-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="IPureLogger.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.Collections.Generic;
using Microsoft.Extensions.Logging;

namespace PureActive.Logging.Abstractions.Interfaces
{
    /// <summary>
    /// Interface IPureLogger
    /// Implements the <see cref="Microsoft.Extensions.Logging.ILogger" />
    /// </summary>
    /// <seealso cref="Microsoft.Extensions.Logging.ILogger" />
    /// <autogeneratedoc />
    public interface IPureLogger : ILogger
    {
        /// <summary>
        /// Pushes the property.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        /// <param name="destructureObjects">if set to <c>true</c> [destructure objects].</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushProperty(string propertyName, object value, bool destructureObjects = false);
        /// <summary>
        /// Pushes the property.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        /// <param name="destructureObjects">if set to <c>true</c> [destructure objects].</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushProperty<T>(string propertyName, T value, bool destructureObjects = false);

        /// <summary>
        /// Pushes the log properties.
        /// </summary>
        /// <param name="logPropertyList">The log property list.</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushLogProperties(IEnumerable<IPureLogProperty> logPropertyList);

        /// <summary>
        /// Pushes the log properties.
        /// </summary>
        /// <param name="properties">The properties.</param>
        /// <param name="destructureObjects">if set to <c>true</c> [destructure objects].</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushLogProperties(IEnumerable<KeyValuePair<string, object>> properties,
            bool destructureObjects = false);

        /// <summary>
        /// Pushes the log properties.
        /// </summary>
        /// <param name="logPropertyList">The log property list.</param>
        /// <param name="minimumLogLevel">The minimum log level.</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushLogProperties(IEnumerable<IPureLogPropertyLevel> logPropertyList, LogLevel minimumLogLevel);


        /// <summary>
        /// Pushes the log properties.
        /// </summary>
        /// <param name="logPropertyList">The log property list.</param>
        /// <param name="includeLogProperty">The include log property.</param>
        /// <returns>IDisposable.</returns>
        /// <autogeneratedoc />
        IDisposable PushLogProperties(IEnumerable<IPureLogPropertyLevel> logPropertyList,
            Func<IPureLogPropertyLevel, bool> includeLogProperty);
    }

    /// <summary>
    /// A generic interface for logging where the category name is derived from the specified
    /// <typeparamref name="TCategoryName" /> type name.
    /// Generally used to enable activation of a named <see cref="T:Microsoft.Extensions.Logging.ILogger" /> from
    /// dependency injection.
    /// Implements the <see cref="PureActive.Logging.Abstractions.Interfaces.IPureLogger" />
    /// Implements the <see cref="Microsoft.Extensions.Logging.ILogger{TCategoryName}" />
    /// </summary>
    /// <typeparam name="TCategoryName">The type who's name is used for the logger category name.</typeparam>
    /// <seealso cref="PureActive.Logging.Abstractions.Interfaces.IPureLogger" />
    /// <seealso cref="Microsoft.Extensions.Logging.ILogger{TCategoryName}" />
    public interface IPureLogger<out TCategoryName> : IPureLogger, ILogger<TCategoryName>
    {
    }
}