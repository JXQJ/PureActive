// ***********************************************************************
// Assembly         : PureActive.Network.Core
// Author           : SteveBu
// Created          : 11-05-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="HostedSocketService.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using PureActive.Logging.Abstractions.Interfaces;

namespace PureActive.Network.Core.Sockets
{
    /// <summary>
    /// Class HostedSocketService.
    /// Implements the <see cref="SocketService" />
    /// </summary>
    /// <seealso cref="SocketService" />
    /// <autogeneratedoc />
    public class HostedSocketService : SocketService
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HostedSocketService"/> class.
        /// </summary>
        /// <param name="logger">The logger.</param>
        /// <autogeneratedoc />
        public HostedSocketService(IPureLogger<SocketService> logger) : base(logger)
        {
        }

        /// <summary>
        /// Starts the service listener if it is in a stopped state.
        /// </summary>
        /// <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        /// <exception cref="NotImplementedException"></exception>
        /// <autogeneratedoc />
        public override bool Start()
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// Stops the service listener if in started state.
        /// </summary>
        /// <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        /// <exception cref="NotImplementedException"></exception>
        /// <autogeneratedoc />
        public override bool Stop()
        {
            throw new NotImplementedException();
        }
    }
}