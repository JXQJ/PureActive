// ***********************************************************************
// Assembly         : PureActive.Logging.Abstractions
// Author           : SteveBu
// Created          : 10-26-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="IPureLoggerSettings.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.Extensions.Logging;
using PureActive.Logging.Abstractions.Types;

namespace PureActive.Logging.Abstractions.Interfaces
{
    /// <summary>
    /// Interface IPureLoggerSettings
    /// </summary>
    /// <autogeneratedoc />
    public interface IPureLoggerSettings
    {
        /// <summary>
        /// Gets or sets the logging output flags.
        /// </summary>
        /// <value>The logging output flags.</value>
        /// <autogeneratedoc />
        LoggingOutputFlags LoggingOutputFlags { get; set; }

        /// <summary>
        /// Gets the log folder path.
        /// </summary>
        /// <value>The log folder path.</value>
        /// <autogeneratedoc />
        string LogFolderPath { get; }

        /// <summary>
        /// Gets the test log folder path.
        /// </summary>
        /// <value>The test log folder path.</value>
        /// <autogeneratedoc />
        string TestLogFolderPath { get; }

        /// <summary>
        /// Registers the log level.
        /// </summary>
        /// <param name="key">The key.</param>
        /// <param name="logLevel">The log level.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel RegisterLogLevel(string key, LogLevel logLevel);
        /// <summary>
        /// Gets the log level.
        /// </summary>
        /// <param name="key">The key.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetLogLevel(string key);

        /// <summary>
        /// Gets the or register log level.
        /// </summary>
        /// <param name="key">The key.</param>
        /// <param name="logLevel">The log level.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetOrRegisterLogLevel(string key, LogLevel logLevel);
        /// <summary>
        /// Gets the or register default log level.
        /// </summary>
        /// <param name="key">The key.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetOrRegisterDefaultLogLevel(string key);

        /// <summary>
        /// Registers the log level.
        /// </summary>
        /// <param name="loggingOutputFlag">The logging output flag.</param>
        /// <param name="logLevel">The log level.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel RegisterLogLevel(LoggingOutputFlags loggingOutputFlag, LogLevel logLevel);
        /// <summary>
        /// Gets the log level.
        /// </summary>
        /// <param name="loggingOutputFlag">The logging output flag.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetLogLevel(LoggingOutputFlags loggingOutputFlag);

        /// <summary>
        /// Gets the or register log level.
        /// </summary>
        /// <param name="loggingOutputFlag">The logging output flag.</param>
        /// <param name="logLevel">The log level.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetOrRegisterLogLevel(LoggingOutputFlags loggingOutputFlag, LogLevel logLevel);
        /// <summary>
        /// Gets the or register default log level.
        /// </summary>
        /// <param name="loggingOutputFlag">The logging output flag.</param>
        /// <returns>IPureLogLevel.</returns>
        /// <autogeneratedoc />
        IPureLogLevel GetOrRegisterDefaultLogLevel(LoggingOutputFlags loggingOutputFlag);
    }
}