// ***********************************************************************
// Assembly         : PureActive.Network.Services.NetworkMap.UnitTests
// Author           : SteveBu
// Created          : 11-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="NetworkMapServiceUnitTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************

using FluentAssertions;
using PureActive.Hosting.Abstractions.System;
using PureActive.Hosting.Abstractions.Types;
using PureActive.Logging.Abstractions.Interfaces;
using PureActive.Network.Abstractions.CommonNetworkServices;
using PureActive.Network.Abstractions.Network;
using PureActive.Network.Abstractions.NetworkMapService;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;

namespace PureActive.Network.Services.NetworkMap.UnitTests.NetworkMapService
{
    /// <summary>
    /// Class NetworkMapServiceUnitTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{NetworkMapServiceUnitTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{NetworkMapServiceUnitTests}" />
    /// <autogeneratedoc />
    [Trait("Category", "Unit")]
    public class NetworkMapServiceUnitTests : TestBaseLoggable<NetworkMapServiceUnitTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NetworkMapServiceUnitTests"/> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public NetworkMapServiceUnitTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {
            var commonNetworkServices = CommonNetworkServices.CreateInstance(TestLoggerFactory, "NetworkMapServiceUnitTests");
            _networkMapService = new NetworkMap.NetworkMapService(new Devices.Network.NetworkMap(commonNetworkServices), new DhcpService.DhcpService(commonNetworkServices));
        }

        private readonly INetworkMapService _networkMapService;

        /// <summary>
        /// Defines the test method NetworkMapService_Constructor.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void NetworkMapService_Constructor()
        {
            _networkMapService.Should().NotBeNull();
            _networkMapService.Should().NotBeNull().And.Subject.Should().BeAssignableTo<INetworkMapService>();
        }


        /// <summary>
        /// Defines the test method NetworkMapService_Constructor.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void NetworkMapService_Services_Initialization()
        {
            _networkMapService.Should().NotBeNull().And.Subject.Should().BeAssignableTo<INetworkMapService>();
            _networkMapService.NetworkMap.Should().NotBeNull().And.Subject.Should().BeAssignableTo<INetworkMap>();
            _networkMapService.CommonNetworkServices.Should().NotBeNull().And.Subject.Should().BeAssignableTo<ICommonNetworkServices>();
            _networkMapService.CommonServices.Should().NotBeNull().And.Subject.Should().BeAssignableTo<ICommonServices>();
            _networkMapService.Logger.Should().NotBeNull().And.Subject.Should().BeAssignableTo<IPureLogger>();
            _networkMapService.LoggerFactory.Should().NotBeNull().And.Subject.Should().BeAssignableTo<IPureLoggerFactory>();
            _networkMapService.LoggerSettings.Should().NotBeNull().And.Subject.Should().BeAssignableTo<IPureLoggerSettings>();
            _networkMapService.ServiceHostStatus.Should().NotBeNull().And.Subject.Should()
                .Be(ServiceHostStatus.Stopped);
        }
    }
}