// ***********************************************************************
// Assembly         : PureActive.Network.Services.PingService.UnitTests
// Author           : SteveBu
// Created          : 11-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="PingTaskUnitTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Threading.Tasks;
using FluentAssertions;
using PureActive.Hosting.CommonServices;
using PureActive.Network.Abstractions.Extensions;
using PureActive.Network.Abstractions.PingService;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;

namespace PureActive.Network.Services.PingService.UnitTests
{
    /// <summary>
    /// Class PingTaskUnitTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{PingTaskUnitTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{PingTaskUnitTests}" />
    /// <autogeneratedoc />
    [Trait("Category", "Unit")]
    public class PingTaskUnitTests : TestBaseLoggable<PingTaskUnitTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PingTaskUnitTests"/> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public PingTaskUnitTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {
            var commonServices = CommonServices.CreateInstance(TestLoggerFactory, "PingTaskUnitTests");
            _pingService = new PingService(commonServices);
        }

        /// <summary>
        /// The ping service
        /// </summary>
        /// <autogeneratedoc />
        private readonly IPingService _pingService;

        /// <summary>
        /// Defines the test method TestPingTask.
        /// </summary>
        /// <returns>Task.</returns>
        /// <autogeneratedoc />
        [Fact]
        public async Task TestPingTask()
        {
            var ipAddress = IPAddressExtensions.GetDefaultLocalNetworkAddress(Logger);

            // Wait 5 seconds for a reply.
            int timeout = 500;
            var pingReply = await _pingService.PingIpAddressAsync(ipAddress, timeout);
            pingReply.Should().NotBeNull();
        }
    }
}