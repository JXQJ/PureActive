// ***********************************************************************
// Assembly         : PureActive.Network.Abstractions
// Author           : SteveBu
// Created          : 11-02-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="ILocalNetworkCollection.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Collections.Generic;
using PureActive.Network.Abstractions.Network;

namespace PureActive.Network.Abstractions.Local
{
    /// <summary>
    /// Interface ILocalNetworkCollection
    /// Implements the <see cref="System.Collections.Generic.IEnumerable{INetwork}" />
    /// </summary>
    /// <seealso cref="System.Collections.Generic.IEnumerable{INetwork}" />
    /// <autogeneratedoc />
    public interface ILocalNetworkCollection : IEnumerable<INetwork>
    {
        /// <summary>
        /// Gets the count.
        /// </summary>
        /// <value>The count.</value>
        /// <autogeneratedoc />
        int Count { get; }

        /// <summary>
        /// Gets the primary network.
        /// </summary>
        /// <value>The primary network.</value>
        /// <autogeneratedoc />
        INetwork PrimaryNetwork { get; }

        /// <summary>
        /// Adds the adapter to network.
        /// </summary>
        /// <param name="networkAdapter">The network adapter.</param>
        /// <returns>INetwork.</returns>
        /// <autogeneratedoc />
        INetwork AddAdapterToNetwork(INetworkAdapter networkAdapter);
        /// <summary>
        /// Removes the adapter from network.
        /// </summary>
        /// <param name="networkAdapter">The network adapter.</param>
        /// <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        /// <autogeneratedoc />
        bool RemoveAdapterFromNetwork(INetworkAdapter networkAdapter);

        /// <summary>
        /// Removes the network.
        /// </summary>
        /// <param name="network">The network.</param>
        /// <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        /// <autogeneratedoc />
        bool RemoveNetwork(INetwork network);
    }
}