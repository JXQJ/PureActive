// ***********************************************************************
// Assembly         : PureActive.Core.UnitTests
// Author           : SteveBu
// Created          : 11-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="GuidExtensionsUnitTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using FluentAssertions;
using PureActive.Core.Extensions;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;

namespace PureActive.Core.UnitTests.Extensions
{
    /// <summary>
    /// Class GuidExtensionsUnitTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{GuidExtensionsUnitTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{GuidExtensionsUnitTests}" />
    /// <autogeneratedoc />
    [Trait("Category", "Unit")]
    public class GuidExtensionsUnitTests : TestBaseLoggable<GuidExtensionsUnitTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GuidExtensionsUnitTests"/> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public GuidExtensionsUnitTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {
        }

        /// <summary>
        /// Defines the test method GuidExtensions_Empty.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void GuidExtensions_Empty()
        {
            Guid guid = new Guid();

            var guidNoDashes = guid.ToStringNoDashes();

            guidNoDashes.Should().Be("00000000000000000000000000000000");
        }

        /// <summary>
        /// Defines the test method GuidExtensions_UpperCase.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void GuidExtensions_UpperCase()
        {
            var guid = Guid.NewGuid();
            var guidNoDashes = guid.ToStringNoDashes();

            guidNoDashes.Should().Be(guid.ToString().ToUpper().Replace("-", ""));
        }
    }
}