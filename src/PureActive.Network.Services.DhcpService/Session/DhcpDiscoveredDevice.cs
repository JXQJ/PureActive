// ***********************************************************************
// Assembly         : PureActive.Network.Services.DhcpService
// Author           : SteveBu
// Created          : 11-05-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="DhcpDiscoveredDevice.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.Net;
using System.Net.NetworkInformation;
using PureActive.Network.Abstractions.DhcpService.Interfaces;
using PureActive.Network.Abstractions.Types;

namespace PureActive.Network.Services.DhcpService.Session
{
    /// <summary>
    /// Class DhcpDiscoveredDevice.
    /// Implements the <see cref="PureActive.Network.Abstractions.DhcpService.Interfaces.IDhcpDiscoveredDevice" />
    /// </summary>
    /// <seealso cref="PureActive.Network.Abstractions.DhcpService.Interfaces.IDhcpDiscoveredDevice" />
    /// <autogeneratedoc />
    public class DhcpDiscoveredDevice : IDhcpDiscoveredDevice
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DhcpDiscoveredDevice"/> class.
        /// </summary>
        /// <param name="dhcpSessionId">The DHCP session identifier.</param>
        /// <param name="physicalAddress">The physical address.</param>
        /// <param name="ipAddress">The ip address.</param>
        /// <exception cref="ArgumentNullException">
        /// ipAddress
        /// or
        /// physicalAddress
        /// </exception>
        /// <autogeneratedoc />
        public DhcpDiscoveredDevice(uint dhcpSessionId, PhysicalAddress physicalAddress, IPAddress ipAddress)
        {
            IpAddress = ipAddress ?? throw new ArgumentNullException(nameof(ipAddress));
            PhysicalAddress = physicalAddress ?? throw new ArgumentNullException(nameof(physicalAddress));
            DhcpSessionId = dhcpSessionId;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DhcpDiscoveredDevice"/> class.
        /// </summary>
        /// <param name="dhcpSessionId">The DHCP session identifier.</param>
        /// <param name="physicalAddress">The physical address.</param>
        /// <autogeneratedoc />
        public DhcpDiscoveredDevice(uint dhcpSessionId, PhysicalAddress physicalAddress)
            : this(dhcpSessionId, physicalAddress, IPAddress.None)
        {
        }

        // IDeviceInfo
        /// <summary>
        /// Gets the identifier.
        /// </summary>
        /// <value>The identifier.</value>
        /// <autogeneratedoc />
        public string Id { get; set; }
        /// <summary>
        /// Gets the model.
        /// </summary>
        /// <value>The model.</value>
        /// <autogeneratedoc />
        public string Model { get; set; }
        /// <summary>
        /// Gets the manufacturer.
        /// </summary>
        /// <value>The manufacturer.</value>
        /// <autogeneratedoc />
        public string Manufacturer { get; set; }
        /// <summary>
        /// Gets the name of the device.
        /// </summary>
        /// <value>The name of the device.</value>
        /// <autogeneratedoc />
        public string DeviceName { get; set; }
        /// <summary>
        /// Gets the version.
        /// </summary>
        /// <value>The version.</value>
        /// <autogeneratedoc />
        public string Version { get; set; }
        /// <summary>
        /// Gets the version number.
        /// </summary>
        /// <value>The version number.</value>
        /// <autogeneratedoc />
        public Version VersionNumber { get; set; }
        /// <summary>
        /// Gets the application version.
        /// </summary>
        /// <value>The application version.</value>
        /// <autogeneratedoc />
        public string AppVersion { get; set; }
        /// <summary>
        /// Gets the application build.
        /// </summary>
        /// <value>The application build.</value>
        /// <autogeneratedoc />
        public string AppBuild { get; set; }
        /// <summary>
        /// Gets the device platform.
        /// </summary>
        /// <value>The device platform.</value>
        /// <autogeneratedoc />
        public DevicePlatform DevicePlatform { get; set; }
        /// <summary>
        /// Gets the type of the device.
        /// </summary>
        /// <value>The type of the device.</value>
        /// <autogeneratedoc />
        public DeviceType DeviceType { get; set; }
        /// <summary>
        /// Gets a value indicating whether this instance is device.
        /// </summary>
        /// <value><c>true</c> if this instance is device; otherwise, <c>false</c>.</value>
        /// <autogeneratedoc />
        public bool IsDevice { get; set; }

        // INetworkDeviceInfo
        /// <summary>
        /// Gets or sets the ip address.
        /// </summary>
        /// <value>The ip address.</value>
        /// <autogeneratedoc />
        public IPAddress IpAddress { get; set; }


        // IDhcpDiscoveredDevice
        /// <summary>
        /// Gets the physical address.
        /// </summary>
        /// <value>The physical address.</value>
        /// <autogeneratedoc />
        public PhysicalAddress PhysicalAddress { get; set; }
        /// <summary>
        /// Gets the name of the host.
        /// </summary>
        /// <value>The name of the host.</value>
        /// <autogeneratedoc />
        public string HostName { get; set; }
        /// <summary>
        /// Gets the vendor class identifier.
        /// </summary>
        /// <value>The vendor class identifier.</value>
        /// <autogeneratedoc />
        public string VendorClassId { get; set; }
        /// <summary>
        /// Gets or sets the DHCP session identifier.
        /// </summary>
        /// <value>The DHCP session identifier.</value>
        /// <autogeneratedoc />
        public uint DhcpSessionId { get; set; }
    }
}