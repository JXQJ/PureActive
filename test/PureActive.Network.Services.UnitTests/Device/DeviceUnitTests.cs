// ***********************************************************************
// Assembly         : PureActive.Network.Services.UnitTests
// Author           : SteveBu
// Created          : 11-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="DeviceUnitTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.Extensions.Logging;
using PureActive.Hosting.Abstractions.System;
using PureActive.Hosting.CommonServices;
using PureActive.Logging.Abstractions.Types;
using PureActive.Network.Abstractions.Types;
using PureActive.Network.Devices.Device;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;

namespace PureActive.Network.Services.UnitTests.Device
{
    /// <summary>
    /// Class DeviceUnitTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{DeviceUnitTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{DeviceUnitTests}" />
    /// <autogeneratedoc />
    [Trait("Category", "Unit")]
    public class DeviceUnitTests : TestBaseLoggable<DeviceUnitTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceUnitTests"/> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public DeviceUnitTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {
            _commonServices = CommonServices.CreateInstance(TestLoggerFactory, "DeviceUnitTests");
        }

        /// <summary>
        /// The common services
        /// </summary>
        /// <autogeneratedoc />
        private readonly ICommonServices _commonServices;

        /// <summary>
        /// Class DeviceTest.
        /// Implements the <see cref="DeviceBase" />
        /// </summary>
        /// <seealso cref="DeviceBase" />
        /// <autogeneratedoc />
        private class DeviceTest : DeviceBase
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="DeviceTest"/> class.
            /// </summary>
            /// <param name="commonServices">The common services.</param>
            /// <param name="deviceType">Type of the device.</param>
            /// <autogeneratedoc />
            public DeviceTest(ICommonServices commonServices, DeviceType deviceType) :
                base(commonServices, deviceType)
            {
            }
        }

        /// <summary>
        /// Defines the test method Device_ToLog.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void Device_ToLog()
        {
            var deviceTest = new DeviceTest(_commonServices, DeviceType.UnknownDevice);

            TestOutputHelper.WriteLine(deviceTest.ToString(LogLevel.Debug, LoggableFormat.ToLog));
        }

        /// <summary>
        /// Defines the test method Device_ToLogParents.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void Device_ToLogParents()
        {
            var deviceTest = new DeviceTest(_commonServices, DeviceType.UnknownDevice);

            TestOutputHelper.WriteLine(deviceTest.ToString(LogLevel.Debug, LoggableFormat.ToLogWithParents));
        }


        /// <summary>
        /// Defines the test method Device_ToString.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void Device_ToString()
        {
            var deviceTest = new DeviceTest(_commonServices, DeviceType.UnknownDevice);

            TestOutputHelper.WriteLine(deviceTest.ToString(LogLevel.Debug, LoggableFormat.ToString));
        }

        /// <summary>
        /// Defines the test method Device_ToStringParents.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void Device_ToStringParents()
        {
            var deviceTest = new DeviceTest(_commonServices, DeviceType.UnknownDevice);

            TestOutputHelper.WriteLine(deviceTest.ToString(LogLevel.Debug, LoggableFormat.ToStringWithParents));
        }
    }
}