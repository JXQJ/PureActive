// ***********************************************************************
// Assembly         : PureActive.Database.SQLite.IntegrationTests
// Author           : SteveBu
// Created          : 12-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 12-17-2018
// ***********************************************************************
// <copyright file="SQLiteIntegrationTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************

using FluentAssertions;
using Microsoft.EntityFrameworkCore;
using PureActive.Core.Abstractions.System;
using PureActive.Database.Abstractions.Data;
using PureActive.Database.SQLite.Provider;
using PureActive.Hosting.Abstractions.Types;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;
using System.ComponentModel.DataAnnotations;

namespace PureActive.Database.SQLite.IntegrationTests
{
    /// <summary>
    /// Class EmailIntegrationTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{SQLiteIntegrationTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{SQLiteIntegrationTests}" />
    [Trait("Category", "Integration")]
    public class SQLiteIntegrationTests : TestBaseLoggable<SQLiteIntegrationTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailIntegrationTests" /> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public SQLiteIntegrationTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {

        }

        public class TestTableSQLite
        {
            [Key]
            public string Id { get; set; }
            public string Property { get; set; }
        }

        public class SQLiteDbContextTest : PureDbContextSQLite<SQLiteDbContextTest>
        {
            public SQLiteDbContextTest(IFileSystem fileSystem) : base(fileSystem, ServiceHost.SQLiteProviderTest, "SQLiteTest")
            {

            }

            public DbSet<TestTableSQLite> TestTable { get; set; }

            protected override void OnModelCreating(ModelBuilder builder)
            {
                // builder.HasDefaultSchema("foo");

                base.OnModelCreating(builder);
            }
        }

        [Fact]
        public void SQLiteIntegration_Constructor()
        {
            IPureDbContext pureDbContextSQLite = new SQLiteDbContextTest(FileSystem);
            pureDbContextSQLite.Should().NotBeNull().And.Subject.Should().BeAssignableTo<IPureDbContext>();
            pureDbContextSQLite.ApplyDatabaseMigrations();
            
            
        }
    }
}
