// ***********************************************************************
// Assembly         : PureActive.Hosting
// Author           : SteveBu
// Created          : 11-03-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="WebHostBuilderExtensions.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using PureActive.Core.Abstractions.System;
using PureActive.Core.System;
using PureActive.Logger.Provider.Serilog.Configuration;
using PureActive.Logger.Provider.Serilog.Settings;
using PureActive.Logging.Abstractions.Types;
using Serilog.Events;
using OperatingSystem = PureActive.Core.System.OperatingSystem;

namespace PureActive.Hosting.Configuration
{
    /// <summary>
    /// Class WebHostBuilderExtensions.
    /// </summary>
    /// <autogeneratedoc />
    public static class WebHostBuilderExtensions
    {
        /// <summary>
        /// Returns the configuration for the webapp.
        /// </summary>
        /// <returns>IConfigurationRoot.</returns>
        private static IConfigurationRoot GetAppConfiguration()
        {
            var fileSystem = new FileSystem();
            return new ConfigurationBuilder()
                .SetBasePath(fileSystem.GetCurrentDirectory())
                .AddAppSettings()
                .AddEnvironmentVariables()
                .Build();
        }


        /// <summary>
        /// Uses the system settings.
        /// </summary>
        /// <param name="webHostBuilder">The web host builder.</param>
        /// <param name="logFileName">Name of the log file.</param>
        /// <param name="includeLogEvent">The include log event.</param>
        /// <returns>IWebHostBuilder.</returns>
        /// <autogeneratedoc />
        public static IWebHostBuilder UseSystemSettings(this IWebHostBuilder webHostBuilder, string logFileName,
            Func<LogEvent, bool> includeLogEvent)
        {
            var operatingSystem = new OperatingSystem();
            var appConfiguration = GetAppConfiguration();
            var fileSystem = new FileSystem(appConfiguration, operatingSystem);

            var loggerSettings = new SerilogLoggerSettings(fileSystem, appConfiguration, LoggingOutputFlags.AppFull);
            var loggerConfiguration =
                LoggerConfigurationFactory.CreateLoggerConfiguration(appConfiguration, logFileName, loggerSettings,
                    includeLogEvent);
            var loggerFactory =
                LoggerConfigurationFactory.CreatePureSeriLoggerFactory(loggerSettings, loggerConfiguration);

            webHostBuilder.ConfigureServices(services =>
                services.AddSingleton(loggerFactory));

            webHostBuilder.ConfigureServices(services =>
                services.AddSingleton<ILoggerFactory>(loggerFactory));

            webHostBuilder.ConfigureServices(services =>
                services.AddSingleton<IOperatingSystem>(operatingSystem));

            webHostBuilder.ConfigureServices(services =>
                services.AddSingleton<IFileSystem>(fileSystem));

            return webHostBuilder;
        }
    }
}