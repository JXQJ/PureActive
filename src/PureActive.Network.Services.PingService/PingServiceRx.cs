// ***********************************************************************
// Assembly         : PureActive.Network.Services.PingService
// Author           : SteveBu
// Created          : 11-05-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="PingServiceRx.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.Net;
using System.Net.NetworkInformation;
using System.Reactive.Threading.Tasks;
using PureActive.Hosting.Abstractions.System;
using PureActive.Network.Abstractions.PingService;

namespace PureActive.Network.Services.PingService
{
    /// <summary>
    /// Class PingServiceRx.
    /// </summary>
    /// <autogeneratedoc />
    public class PingServiceRx
    {
        /// <summary>
        /// The common services
        /// </summary>
        /// <autogeneratedoc />
        private readonly ICommonServices _commonServices;
        /// <summary>
        /// The ping task
        /// </summary>
        /// <autogeneratedoc />
        private readonly IPingTask _pingTask;

        /// <summary>
        /// Initializes a new instance of the <see cref="PingServiceRx"/> class.
        /// </summary>
        /// <param name="commonServices">The common services.</param>
        /// <exception cref="ArgumentNullException">commonServices</exception>
        /// <autogeneratedoc />
        public PingServiceRx(ICommonServices commonServices)
        {
            _commonServices = commonServices ?? throw new ArgumentNullException(nameof(commonServices));
            _pingTask = new PingService.PingTaskImpl(commonServices);
        }

        /// <summary>
        /// Pings the request asynchronous.
        /// </summary>
        /// <param name="ipAddress">The ip address.</param>
        /// <returns>IObservable&lt;PingReply&gt;.</returns>
        /// <autogeneratedoc />
        public IObservable<PingReply> PingRequestAsync(IPAddress ipAddress)
        {
            return _pingTask.PingIpAddressAsync(ipAddress).ToObservable();
        }
    }
}