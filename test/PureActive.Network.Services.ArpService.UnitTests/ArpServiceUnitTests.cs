// ***********************************************************************
// Assembly         : PureActive.Network.Services.ArpService.UnitTests
// Author           : SteveBu
// Created          : 11-17-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="ArpServiceUnitTests.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using FluentAssertions;
using PureActive.Hosting.CommonServices;
using PureActive.Network.Abstractions.ArpService;
using PureActive.Network.Abstractions.PingService;
using PureActive.Serilog.Sink.Xunit.TestBase;
using Xunit;
using Xunit.Abstractions;

namespace PureActive.Network.Services.ArpService.UnitTests
{
    /// <summary>
    /// Class ArpServiceUnitTests.
    /// Implements the <see cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{ArpServiceUnitTests}" />
    /// </summary>
    /// <seealso cref="Serilog.Sink.Xunit.TestBase.TestBaseLoggable{ArpServiceUnitTests}" />
    /// <autogeneratedoc />
    [Trait("Category", "Unit")]
    public class ArpServiceUnitTests : TestBaseLoggable<ArpServiceUnitTests>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ArpServiceUnitTests"/> class.
        /// </summary>
        /// <param name="testOutputHelper">The test output helper.</param>
        /// <autogeneratedoc />
        public ArpServiceUnitTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
        {
            var commonServices = CommonServices.CreateInstance(TestLoggerFactory, "ArpServiceUnitTests");
            IPingService pingService = new PingService.PingService(commonServices);
            _arpService = new ArpService(commonServices, pingService);
        }

        /// <summary>
        /// The arp service
        /// </summary>
        /// <autogeneratedoc />
        private readonly IArpService _arpService;

        /// <summary>
        /// Defines the test method ArpService_Constructor.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void ArpService_Constructor()
        {
            _arpService.Should().NotBeNull();
        }

        /// <summary>
        /// Defines the test method ArpService_Count.
        /// </summary>
        /// <autogeneratedoc />
        [Fact]
        public void ArpService_Count()
        {
            _arpService.Count.Should().Be(0);
        }
    }
}