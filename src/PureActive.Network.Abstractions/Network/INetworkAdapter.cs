// ***********************************************************************
// Assembly         : PureActive.Network.Abstractions
// Author           : SteveBu
// Created          : 11-02-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="INetworkAdapter.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Net.NetworkInformation;
using PureActive.Network.Abstractions.Types;

namespace PureActive.Network.Abstractions.Network
{
    /// <summary>
    /// Interface INetworkAdapter
    /// </summary>
    /// <autogeneratedoc />
    public interface INetworkAdapter
    {
        /// <summary>
        /// Gets the network interface.
        /// </summary>
        /// <value>The network interface.</value>
        /// <autogeneratedoc />
        NetworkInterface NetworkInterface { get; }

        /// <summary>
        /// Gets the operational status.
        /// </summary>
        /// <value>The operational status.</value>
        /// <autogeneratedoc />
        OperationalStatus OperationalStatus { get; }
        /// <summary>
        /// Gets the type of the network interface.
        /// </summary>
        /// <value>The type of the network interface.</value>
        /// <autogeneratedoc />
        NetworkInterfaceType NetworkInterfaceType { get; }

        /// <summary>
        /// Gets the ip properties.
        /// </summary>
        /// <value>The ip properties.</value>
        /// <autogeneratedoc />
        IPInterfaceProperties IPProperties { get; }

        /// <summary>
        /// Gets the primary address subnet.
        /// </summary>
        /// <value>The primary address subnet.</value>
        /// <autogeneratedoc />
        IPAddressSubnet PrimaryAddressSubnet { get; }

        /// <summary>
        /// Gets the network address subnet.
        /// </summary>
        /// <value>The network address subnet.</value>
        /// <autogeneratedoc />
        IPAddressSubnet NetworkAddressSubnet { get; }
    }
}