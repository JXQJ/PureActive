// ***********************************************************************
// Assembly         : PureActive.Network.Abstractions
// Author           : SteveBu
// Created          : 11-05-2018
// License          : Licensed under MIT License, see https://github.com/PureActive/PureActive/blob/master/LICENSE
//
// Last Modified By : SteveBu
// Last Modified On : 11-20-2018
// ***********************************************************************
// <copyright file="DhcpDiscoveredDeviceEvent.cs" company="BushChang Corporation">
//     © 2018 BushChang Corporation. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using PureActive.Network.Abstractions.DhcpService.Interfaces;

namespace PureActive.Network.Abstractions.DhcpService.Events
{
    /// <summary>
    /// Class DhcpDiscoveredDeviceEvent.
    /// </summary>
    /// <autogeneratedoc />
    public class DhcpDiscoveredDeviceEvent
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DhcpDiscoveredDeviceEvent"/> class.
        /// </summary>
        /// <param name="dhcpService">The DHCP service.</param>
        /// <param name="dhcpDiscoveredDevice">The DHCP discovered device.</param>
        /// <exception cref="ArgumentNullException">
        /// dhcpService
        /// or
        /// dhcpDiscoveredDevice
        /// </exception>
        /// <autogeneratedoc />
        public DhcpDiscoveredDeviceEvent(IDhcpService dhcpService, IDhcpDiscoveredDevice dhcpDiscoveredDevice)
        {
            DhcpService = dhcpService ?? throw new ArgumentNullException(nameof(dhcpService));
            DhcpDiscoveredDevice =
                dhcpDiscoveredDevice ?? throw new ArgumentNullException(nameof(dhcpDiscoveredDevice));
        }

        /// <summary>
        /// Gets the DHCP service.
        /// </summary>
        /// <value>The DHCP service.</value>
        /// <autogeneratedoc />
        public IDhcpService DhcpService { get; }
        /// <summary>
        /// Gets the DHCP discovered device.
        /// </summary>
        /// <value>The DHCP discovered device.</value>
        /// <autogeneratedoc />
        public IDhcpDiscoveredDevice DhcpDiscoveredDevice { get; }
    }
}